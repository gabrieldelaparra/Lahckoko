@page "/d3"
@inject GeoLocationService GeoLocationService;

@inject IJSRuntime JsRuntime;

<h3>Component1</h3>

<div>
    Lat: @Location?.Latitude <br />
    Long: @Location?.Longitude <br />
    Accuracy: @Location?.Accuracy <br />
</div>


<style>
    body {
        margin: 0;
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }

    polygon {
        fill: CadetBlue
    }
</style>



@code {

    private Location Location { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GeoLocationService.OnLocationReceived = HandleLocationReceived;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private void HandleLocationReceived(Location location)
    {
        this.Location = location;
        StateHasChanged();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GeoLocationService.RequestGeoLocation();
        }
    }

    private List<Point> points = new List<Point> {
        new Point(-767.937, -247.274),
        new Point(-415.750, -663.172),
        new Point(84.062, -880.411),
        new Point(628.414, -854.185),
        new Point(1105.029, -589.903),
        new Point(1415.602, -142.074),
        new Point(1496.078, 396.933),
        new Point(1329.857, 915.949),
        new Point(951.223, 1307.922)
    };

    public class Point
    {
        public Point(double x, double y)
        {
            this.x = x;
            this.y = y;
        }
        public double x { get; set; }
        public double y { get; set; }
    }
}
